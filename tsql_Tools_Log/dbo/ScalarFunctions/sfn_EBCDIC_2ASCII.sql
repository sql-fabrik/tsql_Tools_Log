CREATE FUNCTION dbo.sfn_EBCDIC_2ASCII 
              ( @input varbinary )    
RETURNS char(1)
AS
BEGIN
    DECLARE @ResultVar char(1)

    SELECT @ResultVar =

    CASE

    WHEN @input = 0x00   THEN ''     --  row:  0  NUL // Null
    WHEN @input = 0x01   THEN ''     --  row:  1  SOH // Start of heading
    WHEN @input = 0x02   THEN ''     --  row:  2  STX // Start of text
    WHEN @input = 0x03   THEN ''     --  row:  3  ETX // End of text
    WHEN @input = 0x04   THEN ''     --  row:  4  SEL // Select
    WHEN @input = 0x05   THEN ''     --  row:  5  HT  // Horizontal tab
    WHEN @input = 0x06   THEN ''     --  row:  6  RNL // Required new line
    WHEN @input = 0x07   THEN ''     --  row:  7  DEL // Delete
    WHEN @input = 0x08   THEN ''     --  row:  8  GE  // Graphic escape
    WHEN @input = 0x09   THEN ''     --  row:  9  SPS // Superscript
    WHEN @input = 0x0A   THEN ''     --  row: 10  RPT // Repeat
    WHEN @input = 0x0B   THEN ''     --  row: 11  VT  // Vertical tab
    WHEN @input = 0x0C   THEN ''     --  row: 12  FF  // 
    WHEN @input = 0x0D   THEN ''     --  row: 13  CR  // Carriage return
    WHEN @input = 0x0E   THEN ''     --  row: 14  SO  // Shift out
    WHEN @input = 0x0F   THEN ''     --  row: 15  SI  // Shift in
    WHEN @input = 0x10   THEN ''     --  row: 16  DLE // Data length escape
    WHEN @input = 0x11   THEN ''     --  row: 17  DC1 // Device control 1
    WHEN @input = 0x12   THEN ''     --  row: 18  DC2 // Device control 2
    WHEN @input = 0x13   THEN ''     --  row: 19  DC3 // Device control 3
    WHEN @input = 0x14   THEN ''     --  row: 20  RES/ENP // Restore/enable presentation
    WHEN @input = 0x15   THEN ''     --  row: 21  NL  // New line
    WHEN @input = 0x16   THEN ''     --  row: 22  BS  // Backspace
    WHEN @input = 0x17   THEN ''     --  row: 23  POC // Program-operator communication
    WHEN @input = 0x18   THEN ''     --  row: 24  CAN // Cancel
    WHEN @input = 0x19   THEN ''     --  row: 25  EM  // End of medium
    WHEN @input = 0x1A   THEN ''     --  row: 26  UBS // Unit backspace
    WHEN @input = 0x1B   THEN ''     --  row: 27  CU1 // Customer use 1
    WHEN @input = 0x1C   THEN ''     --  row: 28  IFS // Interchange file separator
    WHEN @input = 0x1D   THEN ''     --  row: 29  IGS // Interchange group separator
    WHEN @input = 0x1E   THEN ''     --  row: 30  IRS // Interchange record separator
    WHEN @input = 0x1F   THEN ''     --  row: 31  IUS/ITB // Interchange unit separator/intermediate transmission block
    WHEN @input = 0x20   THEN ''     --  row: 32  DS  // Digit select
    WHEN @input = 0x21   THEN ''     --  row: 33  SOS // Start of significance
    WHEN @input = 0x22   THEN ''     --  row: 34  FS  // Field separator
    WHEN @input = 0x23   THEN ''     --  row: 35  WUS // Word underscore
    WHEN @input = 0x24   THEN ''     --  row: 36  BYP/INP // Bypass/inhibit presentation
    WHEN @input = 0x25   THEN ''     --  row: 37  LF  // Line Feed
    WHEN @input = 0x26   THEN ''     --  row: 38  ETB // End of Transmission Block
    WHEN @input = 0x27   THEN ''     --  row: 39  ESC // Escape
    WHEN @input = 0x28   THEN ''     --  row: 40  SA  // Set Attribute
    WHEN @input = 0x29   THEN ''     --  row: 41  SFE // Start Field Extended
    WHEN @input = 0x2A   THEN ''     --  row: 42  SM/SW // Set Mode/ Set Switch
    WHEN @input = 0x2B   THEN ''     --  row: 43  CSP // Control Sequence Prefix
    WHEN @input = 0x2C   THEN ''     --  row: 44  MFA // Modify Field Attribute
    WHEN @input = 0x2D   THEN ''     --  row: 45  ENQ // Enquiry
    WHEN @input = 0x2E   THEN ''     --  row: 46  ACK // Acknowledge
    WHEN @input = 0x2F   THEN ''     --  row: 47  BEL // Bell
    WHEN @input = 0x30   THEN ''     --  row: 48      // Nicht belegt
    WHEN @input = 0x31   THEN ''     --  row: 49      // Nicht belegt
    WHEN @input = 0x32   THEN ''     --  row: 50  SYN // Synchronous idle
    WHEN @input = 0x33   THEN ''     --  row: 51  IRS // Index return
    WHEN @input = 0x34   THEN ''     --  row: 52  PP  // Presentation position
    WHEN @input = 0x35   THEN ''     --  row: 53  TRN // Transparent
    WHEN @input = 0x36   THEN ''     --  row: 54  NBS // Numeric backspace
    WHEN @input = 0x37   THEN ''     --  row: 55  EOT // End of transmission
    WHEN @input = 0x38   THEN ''     --  row: 56  SBS // Subscript
    WHEN @input = 0x39   THEN ''     --  row: 57  IT  // Indent tab
    WHEN @input = 0x3A   THEN ''     --  row: 58  RFF // Required form feed
    WHEN @input = 0x3B   THEN ''     --  row: 59  CU3 // Customer use 3
    WHEN @input = 0x3C   THEN ''     --  row: 60  DC4 // Device control 4
    WHEN @input = 0x3D   THEN ''     --  row: 61  NAK // Negative Acknowledge
    WHEN @input = 0x3E   THEN ''     --  row: 62  SUB // Substitute
    WHEN @input = 0x3F   THEN ''     --  row: 63  SP  // Space
    WHEN @input = 0x40   THEN ''     --  row: 64  RSP // Required space
    WHEN @input = 0x41   THEN ''     --  row: 65      // Nicht belegt
    WHEN @input = 0x42   THEN ''     --  row: 66      // Nicht belegt
    WHEN @input = 0x43   THEN ''     --  row: 67      // Nicht belegt
    WHEN @input = 0x44   THEN ''     --  row: 68      // Nicht belegt
    WHEN @input = 0x45   THEN ''     --  row: 69      // Nicht belegt
    WHEN @input = 0x46   THEN ''     --  row: 70      // Nicht belegt
    WHEN @input = 0x47   THEN ''     --  row: 71      // Nicht belegt
    WHEN @input = 0x48   THEN ''     --  row: 72      // Nicht belegt
    WHEN @input = 0x49   THEN ''     --  row: 73      // Nicht belegt
    WHEN @input = 0x4A   THEN '¢'    --  row: 74      // Cent-Sign
    WHEN @input = 0x4B   THEN '.'    --  row: 75      // Full Stop
    WHEN @input = 0x4C   THEN '<'    --  row: 76      // Less than
    WHEN @input = 0x4D   THEN '('    --  row: 77      // Left bracket
    WHEN @input = 0x4E   THEN '+'    --  row: 78      // Plus
    WHEN @input = 0x4F   THEN '|'    --  row: 79      // Logical OR
    WHEN @input = 0x50   THEN '&'    --  row: 80      // Ampersand
    WHEN @input = 0x51   THEN ''     --  row: 81      // Nicht belegt
    WHEN @input = 0x52   THEN ''     --  row: 82      // Nicht belegt
    WHEN @input = 0x53   THEN ''     --  row: 83      // Nicht belegt
    WHEN @input = 0x54   THEN ''     --  row: 84      // Nicht belegt
    WHEN @input = 0x55   THEN ''     --  row: 85      // Nicht belegt
    WHEN @input = 0x56   THEN ''     --  row: 86      // Nicht belegt
    WHEN @input = 0x57   THEN ''     --  row: 87      // Nicht belegt
    WHEN @input = 0x58   THEN ''     --  row: 88      // Nicht belegt
    WHEN @input = 0x59   THEN ''     --  row: 89      // Nicht belegt
    WHEN @input = 0x5A   THEN '!'    --  row: 90      // Exclamation Mark
    WHEN @input = 0x5B   THEN '$'    --  row: 91      // Dollar sign
    WHEN @input = 0x5C   THEN '*'    --  row: 92      // Asterisk
    WHEN @input = 0x5D   THEN ')'    --  row: 93      // Right bracket
    WHEN @input = 0x5E   THEN ';'    --  row: 94      // Semicolon
    WHEN @input = 0x5F   THEN '¬'    --  row: 95      // Logical NOT
    WHEN @input = 0x60   THEN '-'    --  row: 96      // Hyphen
    WHEN @input = 0x61   THEN '/'    --  row: 97      // Slash
    WHEN @input = 0x62   THEN ''     --  row: 98      // Nicht belegt
    WHEN @input = 0x63   THEN ''     --  row: 99      // Nicht belegt
    WHEN @input = 0x64   THEN ''     --  row:100      // Nicht belegt
    WHEN @input = 0x65   THEN ''     --  row:101      // Nicht belegt
    WHEN @input = 0x66   THEN ''     --  row:102      // Nicht belegt
    WHEN @input = 0x67   THEN ''     --  row:103      // Nicht belegt
    WHEN @input = 0x68   THEN ''     --  row:104      // Nicht belegt
    WHEN @input = 0x69   THEN ''     --  row:105      // Nicht belegt
    WHEN @input = 0x6A   THEN '¦'    --  row:106      // Broken pipe; Broken Bar
    WHEN @input = 0x6B   THEN ','    --  row:107      // Comma
    WHEN @input = 0x6C   THEN '%'    --  row:108      // Percent
    WHEN @input = 0x6D   THEN '_'    --  row:109      // Underscore
    WHEN @input = 0x6E   THEN '>'    --  row:110      // Greater than
    WHEN @input = 0x6F   THEN '?'    --  row:111      // Question mark
    WHEN @input = 0x70   THEN ''     --  row:112      // Nicht belegt
    WHEN @input = 0x71   THEN ''     --  row:113      // Nicht belegt
    WHEN @input = 0x72   THEN ''     --  row:114      // Nicht belegt
    WHEN @input = 0x73   THEN ''     --  row:115      // Nicht belegt
    WHEN @input = 0x74   THEN ''     --  row:116      // Nicht belegt
    WHEN @input = 0x75   THEN ''     --  row:117      // Nicht belegt
    WHEN @input = 0x76   THEN ''     --  row:118      // Nicht belegt
    WHEN @input = 0x77   THEN ''     --  row:119      // Nicht belegt
    WHEN @input = 0x78   THEN ''     --  row:120      // Nicht belegt
    WHEN @input = 0x79   THEN '`'    --  row:121      // Grave accent
    WHEN @input = 0x7A   THEN ':'    --  row:122      // Doppelpunkt
    WHEN @input = 0x7B   THEN '#'    --  row:123      // number sign, mesh, pound, carpet, sharp
    WHEN @input = 0x7C   THEN '@'    --  row:124      // at sign
    WHEN @input = 0x7D   THEN ''''   --  row:125      // Apostroph, single quot
    WHEN @input = 0x7E   THEN '='    --  row:126      // Equals to
    WHEN @input = 0x7F   THEN '"'    --  row:127      // Quotes
    WHEN @input = 0x80   THEN ''     --  row:128      // Nicht belegt
    WHEN @input = 0x81   THEN 'a'    --  row:129      // Kleines a
    WHEN @input = 0x82   THEN 'b'    --  row:130      // Kleines b
    WHEN @input = 0x83   THEN 'c'    --  row:131      // Kleines c
    WHEN @input = 0x84   THEN 'd'    --  row:132      // Kleines d
    WHEN @input = 0x85   THEN 'e'    --  row:133      // Kleines e
    WHEN @input = 0x86   THEN 'f'    --  row:134      // Kleines f
    WHEN @input = 0x87   THEN 'g'    --  row:135      // Kleines g
    WHEN @input = 0x88   THEN 'h'    --  row:136      // Kleines h
    WHEN @input = 0x89   THEN 'i'    --  row:137      // Kleines i
    WHEN @input = 0x8A   THEN ''     --  row:138      // Nicht belegt
    WHEN @input = 0x8B   THEN ''     --  row:139      // Nicht belegt
    WHEN @input = 0x8C   THEN ''     --  row:140      // Nicht belegt
    WHEN @input = 0x8D   THEN ''     --  row:141      // Nicht belegt
    WHEN @input = 0x8E   THEN ''     --  row:142      // Nicht belegt
    WHEN @input = 0x8F   THEN ''     --  row:143      // Nicht belegt
    WHEN @input = 0x90   THEN ''     --  row:144      // Nicht belegt
    WHEN @input = 0x91   THEN 'j'    --  row:145      // Kleines j
    WHEN @input = 0x92   THEN 'k'    --  row:146      // Kleines k
    WHEN @input = 0x93   THEN 'l'    --  row:147      // Kleines l
    WHEN @input = 0x94   THEN 'm'    --  row:148      // Kleines m
    WHEN @input = 0x95   THEN 'n'    --  row:149      // Kleines n
    WHEN @input = 0x96   THEN 'o'    --  row:150      // Kleines o
    WHEN @input = 0x97   THEN 'p'    --  row:151      // Kleines p
    WHEN @input = 0x98   THEN 'q'    --  row:152      // Kleines q
    WHEN @input = 0x99   THEN 'r'    --  row:153      // Kleines r
    WHEN @input = 0x9A   THEN ''     --  row:154      // Nicht belegt
    WHEN @input = 0x9B   THEN ''     --  row:155      // Nicht belegt
    WHEN @input = 0x9C   THEN ''     --  row:156      // Nicht belegt
    WHEN @input = 0x9D   THEN ''     --  row:157      // Nicht belegt
    WHEN @input = 0x9E   THEN ''     --  row:158      // Nicht belegt
    WHEN @input = 0x9F   THEN ''     --  row:159      // Nicht belegt
    WHEN @input = 0xA0   THEN ''     --  row:160      // Nicht belegt
    WHEN @input = 0xA1   THEN '~'    --  row:161      // Tilde
    WHEN @input = 0xA2   THEN 's'    --  row:162      // Kleines s
    WHEN @input = 0xA3   THEN 't'    --  row:163      // Kleines t
    WHEN @input = 0xA4   THEN 'u'    --  row:164      // Kleines u
    WHEN @input = 0xA5   THEN 'v'    --  row:165      // Kleines v
    WHEN @input = 0xA6   THEN 'w'    --  row:166      // Kleines w
    WHEN @input = 0xA7   THEN 'x'    --  row:167      // Kleines x
    WHEN @input = 0xA8   THEN 'y'    --  row:168      // Kleines y
    WHEN @input = 0xA9   THEN 'z'    --  row:169      // Kleines z
    WHEN @input = 0xAA   THEN ''     --  row:170      // Nicht belegt
    WHEN @input = 0xAB   THEN ''     --  row:171      // Nicht belegt
    WHEN @input = 0xAC   THEN ''     --  row:172      // Nicht belegt
    WHEN @input = 0xAD   THEN ''     --  row:173      // Nicht belegt
    WHEN @input = 0xAE   THEN ''     --  row:174      // Nicht belegt
    WHEN @input = 0xAF   THEN ''     --  row:175      // Nicht belegt
    WHEN @input = 0xB0   THEN ''     --  row:176      // Nicht belegt
    WHEN @input = 0xB1   THEN ''     --  row:177      // Nicht belegt
    WHEN @input = 0xB2   THEN ''     --  row:178      // Nicht belegt
    WHEN @input = 0xB3   THEN ''     --  row:179      // Nicht belegt
    WHEN @input = 0xB4   THEN ''     --  row:180      // Nicht belegt
    WHEN @input = 0xB5   THEN ''     --  row:181      // Nicht belegt
    WHEN @input = 0xB6   THEN ''     --  row:182      // Nicht belegt
    WHEN @input = 0xB7   THEN ''     --  row:183      // Nicht belegt
    WHEN @input = 0xB8   THEN ''     --  row:184      // Nicht belegt
    WHEN @input = 0xB9   THEN ''     --  row:185      // Nicht belegt
    WHEN @input = 0xBA   THEN ''     --  row:186      // Nicht belegt
    WHEN @input = 0xBB   THEN ''     --  row:187      // Nicht belegt
    WHEN @input = 0xBC   THEN ''     --  row:188      // Nicht belegt
    WHEN @input = 0xBD   THEN ''     --  row:189      // Nicht belegt
    WHEN @input = 0xBE   THEN ''     --  row:190      // Nicht belegt
    WHEN @input = 0xBF   THEN ''     --  row:191      // Nicht belegt
    WHEN @input = 0xC0   THEN '{'    --  row:192      // Opening brace
    WHEN @input = 0xC1   THEN 'A'    --  row:193      // Großes A
    WHEN @input = 0xC2   THEN 'B'    --  row:194      // Großes B
    WHEN @input = 0xC3   THEN 'C'    --  row:195      // Großes C
    WHEN @input = 0xC4   THEN 'D'    --  row:196      // Großes D
    WHEN @input = 0xC5   THEN 'E'    --  row:197      // Großes E
    WHEN @input = 0xC6   THEN 'F'    --  row:198      // Großes F
    WHEN @input = 0xC7   THEN 'G'    --  row:199      // Großes G
    WHEN @input = 0xC8   THEN 'H'    --  row:200      // Großes H
    WHEN @input = 0xC9   THEN 'I'    --  row:201      // Großes I
    WHEN @input = 0xCA   THEN '­'     --  row:202  SHY // Syllable hyphen (Shy)
    WHEN @input = 0xCB   THEN ''     --  row:203      // Nicht belegt
    WHEN @input = 0xCC   THEN ''     --  row:204      // Nicht belegt
    WHEN @input = 0xCD   THEN ''     --  row:205      // Nicht belegt
    WHEN @input = 0xCE   THEN ''     --  row:206      // Nicht belegt
    WHEN @input = 0xCF   THEN ''     --  row:207      // Nicht belegt
    WHEN @input = 0xD0   THEN '}'    --  row:208      // Closing brace
    WHEN @input = 0xD1   THEN 'J'    --  row:209      // Großes J
    WHEN @input = 0xD2   THEN 'K'    --  row:210      // Großes K
    WHEN @input = 0xD3   THEN 'L'    --  row:211      // Großes L
    WHEN @input = 0xD4   THEN 'M'    --  row:212      // Großes M
    WHEN @input = 0xD5   THEN 'N'    --  row:213      // Großes N
    WHEN @input = 0xD6   THEN 'O'    --  row:214      // Großes O
    WHEN @input = 0xD7   THEN 'P'    --  row:215      // Großes P
    WHEN @input = 0xD8   THEN 'Q'    --  row:216      // Großes Q
    WHEN @input = 0xD9   THEN 'R'    --  row:217      // Großes R
    WHEN @input = 0xDA   THEN ''     --  row:218      // Nicht belegt
    WHEN @input = 0xDB   THEN ''     --  row:219      // Nicht belegt
    WHEN @input = 0xDC   THEN ''     --  row:220      // Nicht belegt
    WHEN @input = 0xDD   THEN ''     --  row:221      // Nicht belegt
    WHEN @input = 0xDE   THEN ''     --  row:222      // Nicht belegt
    WHEN @input = 0xDF   THEN ''     --  row:223      // Nicht belegt
    WHEN @input = 0xE0   THEN '\'    --  row:224      // Reverse slash, Backslash
    WHEN @input = 0xE1   THEN ''     --  row:225  NSP // Numeric space
    WHEN @input = 0xE2   THEN 'S'    --  row:226      // Großes S
    WHEN @input = 0xE3   THEN 'T'    --  row:227      // Großes T
    WHEN @input = 0xE4   THEN 'U'    --  row:228      // Großes U
    WHEN @input = 0xE5   THEN 'V'    --  row:229      // Großes V
    WHEN @input = 0xE6   THEN 'W'    --  row:230      // Großes W
    WHEN @input = 0xE7   THEN 'X'    --  row:231      // Großes X
    WHEN @input = 0xE8   THEN 'Y'    --  row:232      // Großes Y
    WHEN @input = 0xE9   THEN 'Z'    --  row:233      // Großes Z
    WHEN @input = 0xEA   THEN ''     --  row:234      // Nicht belegt
    WHEN @input = 0xEB   THEN ''     --  row:235      // Nicht belegt
    WHEN @input = 0xEC   THEN ''     --  row:236      // Nicht belegt
    WHEN @input = 0xED   THEN ''     --  row:237      // Nicht belegt
    WHEN @input = 0xEE   THEN ''     --  row:238      // Nicht belegt
    WHEN @input = 0xEF   THEN ''     --  row:239      // Nicht belegt
    WHEN @input = 0xF0   THEN '0'    --  row:240      // Ziffer 0
    WHEN @input = 0xF1   THEN '1'    --  row:241      // Ziffer 1
    WHEN @input = 0xF2   THEN '2'    --  row:242      // Ziffer 2
    WHEN @input = 0xF3   THEN '3'    --  row:243      // Ziffer 3
    WHEN @input = 0xF4   THEN '4'    --  row:244      // Ziffer 4
    WHEN @input = 0xF5   THEN '5'    --  row:245      // Ziffer 5
    WHEN @input = 0xF6   THEN '6'    --  row:246      // Ziffer 6
    WHEN @input = 0xF7   THEN '7'    --  row:247      // Ziffer 7
    WHEN @input = 0xF8   THEN '8'    --  row:248      // Ziffer 8
    WHEN @input = 0xF9   THEN '9'    --  row:249      // Ziffer 9
    WHEN @input = 0xFA   THEN ''     --  row:250      // Nicht belegt
    WHEN @input = 0xFB   THEN ''     --  row:251      // Nicht belegt
    WHEN @input = 0xFC   THEN ''     --  row:252      // Nicht belegt
    WHEN @input = 0xFD   THEN ''     --  row:253      // Nicht belegt
    WHEN @input = 0xFE   THEN ''     --  row:254      // Nicht belegt
    WHEN @input = 0xFF   THEN ''     --  row:255  EO  // Eight ones
    ELSE                      NULL                                 
    
    END  -- end CASE

    -- Return 
    RETURN @ResultVar

END  -- end FUNCTION
